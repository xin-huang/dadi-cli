import dadi
import glob
import pytest
import subprocess
from dadi_cli.Stat import godambe_stat_dfe
from dadi_cli.Stat import godambe_stat_demograpy
import os


try:
    if not os.path.exists("./tests/test_results"):
        os.makedirs("./tests/test_results")
except:
    pass


def test_StatDM_code():
    fs = "tests/example_data/split_mig_syn.fs"
    func = dadi.Demographics2D.split_mig
    grids = [60, 80, 100]
    output = "./tests/test_results/example.split_mig.demo.params.ci"
    # Bootstrap example data was generated by sampling the fs
    # ex. fs.sample()
    bootstrap_dir = "./tests/example_data/split_mig_bootstrap_syn/"
    demo_popt = "tests/example_data/example.split_mig.demo.params.InferDM.bestfits"
    fixed_params = -1
    nomisid = True
    logscale = False
    godambe_stat_demograpy(
        fs,
        func,
        grids,
        output,
        bootstrap_dir,
        demo_popt,
        fixed_params,
        nomisid,
        logscale,
    )


def test_StatDM_fix_code():
    fs = "tests/example_data/split_mig_syn.fs"
    func = dadi.Demographics2D.split_mig
    grids = [60, 80, 100]
    output = "./tests/test_results/example.split_mig.demo.params.ci"
    # Bootstrap example data was generated by sampling the fs
    # ex. fs.sample()
    bootstrap_dir = "./tests/example_data/split_mig_bootstrap_syn/"
    demo_popt = "tests/example_data/example.split_mig.demo.params.with.misid.InferDM.bestfits"
    fixed_params = [-1, -1, 0.00984767, -1, -1]
    nomisid = False
    logscale = True
    godambe_stat_demograpy(
        fs,
        func,
        grids,
        output,
        bootstrap_dir,
        demo_popt,
        fixed_params,
        nomisid,
        logscale
    )


def test_StatDFE_code_mix_lognormal():
    fs = "tests/example_data/split_mig_non_mix.fs"
    cache1d = "tests/example_data/cache_split_mig_1d.bpkl"
    cache2d = "tests/example_data/cache_split_mig_2d.bpkl"
    sele_dist1 = "lognormal"
    sele_dist2 = "biv_lognormal"
    output = "./tests/test_results/example.split_mig.dfe.mixture_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_mix/"
    dfe_popt = "tests/example_data/example.split_mig.dfe.lognormal_mixture.params.with.misid.InferDFE.bestfits"
    fixed_params = [-1, -1, 0, -1, -1]
    nomisid = False
    logscale = False
    godambe_stat_dfe(
        fs,
        cache1d,
        cache2d,
        sele_dist1,
        sele_dist2,
        output,
        bootstrap_syn_dir,
        bootstrap_non_dir,
        dfe_popt,
        fixed_params,
        nomisid,
        logscale,
    )


def test_StatDFE_code_1d_lognormal():
    fs = "tests/example_data/split_mig_non_1d.fs"
    cache1d = "tests/example_data/cache_split_mig_1d.bpkl"
    cache2d = None
    sele_dist1 = "lognormal"
    sele_dist2 = None
    output = "./tests/test_results/example.split_mig.dfe.1D_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_1d/"
    dfe_popt = (
        "tests/example_data/example.split_mig.dfe.1D_lognormal.params.with.misid.InferDFE.bestfits"
    )
    fixed_params = -1
    nomisid = False
    logscale = True
    godambe_stat_dfe(
        fs,
        cache1d,
        cache2d,
        sele_dist1,
        sele_dist2,
        output,
        bootstrap_syn_dir,
        bootstrap_non_dir,
        dfe_popt,
        fixed_params,
        nomisid,
        logscale,
    )


def test_StatDFE_code_2d_lognormal():
    fs = "tests/example_data/split_mig_non_2d.fs"
    cache1d = None
    cache2d = "tests/example_data/cache_split_mig_2d.bpkl"
    sele_dist1 = None
    sele_dist2 = "biv_lognormal"
    output = "./tests/test_results/example.split_mig.dfe.2D_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_2d/"
    dfe_popt = (
        "tests/example_data/example.split_mig.dfe.2D_lognormal.params.InferDFE.bestfits"
    )
    fixed_params = -1
    nomisid = True
    logscale = False
    godambe_stat_dfe(
        fs,
        cache1d,
        cache2d,
        sele_dist1,
        sele_dist2,
        output,
        bootstrap_syn_dir,
        bootstrap_non_dir,
        dfe_popt,
        fixed_params,
        nomisid,
        logscale,
    )


@pytest.mark.skip()
def test_StatDFE_terminal_1d_lognormal():
    fs = "tests/example_data/split_mig_non_1d.fs"
    cache1d = "tests/example_data/cache_split_mig_1d.bpkl"
    sele_dist1 = "lognormal"
    output = "./tests/test_results/example.split_mig.dfe.mixture_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_1d/"
    dfe_popt = (
        "tests/example_data/example.split_mig.dfe.1d_lognormal.params.InferDFE.bestfits"
    )
    subprocess.run(
        "dadi-cli StatDFE --nomisid"
        + " --fs "
        + fs
        + " --dfe-popt "
        + dfe_popt
        + " --cache1d "
        + cache1d
        + " --pdf1d "
        + sele_dist1
        + " --bootstrapping-synonymous-dir "
        + bootstrap_syn_dir
        + " --bootstrapping-nonsynonymous-dir "
        + bootstrap_non_dir
        + " --output "
        + output,
        shell=True,
    )


@pytest.mark.skip()
def test_StatDFE_terminal_2d_lognormal():
    fs = "tests/example_data/split_mig_non_2d.fs"
    cache1d = None
    cache2d = "tests/example_data/cache_split_mig_2d.bpkl"
    sele_dist1 = None
    sele_dist2 = "biv_lognormal"
    output = "./tests/test_results/example.split_mig.dfe.2D_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_2d/"
    dfe_popt = (
        "tests/example_data/example.split_mig.dfe.2D_lognormal.params.InferDFE.bestfits"
    )
    nomisid = True
    logscale = False
    subprocess.run(
        "dadi-cli StatDFE --nomisid"
        + " --fs "
        + fs
        + " --dfe-popt "
        + dfe_popt
        + " --cache2d "
        + cache2d
        + " --pdf2d "
        + sele_dist2
        + " --bootstrapping-synonymous-dir "
        + bootstrap_syn_dir
        + " --bootstrapping-nonsynonymous-dir "
        + bootstrap_non_dir
        + " --output "
        + output,
        shell=True,
    )


@pytest.mark.skip()
def test_StatDFE_terminal_mix_lognormal():
    fs = "tests/example_data/split_mig_non_mix.fs"
    cache1d = "tests/example_data/cache_split_mig_1d.bpkl"
    cache2d = "tests/example_data/cache_split_mig_2d.bpkl"
    sele_dist1 = "lognormal"
    sele_dist2 = "biv_lognormal"
    output = "./tests/test_results/example.split_mig.dfe.mixture_lognormal.params.ci"
    bootstrap_syn_dir = "tests/example_data/split_mig_bootstrap_syn/"
    bootstrap_non_dir = "tests/example_data/split_mig_bootstrap_non/bootstrap_non_mix/"
    dfe_popt = "tests/example_data/example.split_mig.dfe.lognormal_mixture.params.InferDFE.bestfits"
    constants = "-1 -1 0 -1"
    subprocess.run(
        "dadi-cli StatDFE --nomisid"
        + " --fs "
        + fs
        + " --dfe-popt "
        + dfe_popt
        + " --constants "
        + constants
        + " --cache1d "
        + cache1d
        + " --cache2d "
        + cache2d
        + " --pdf1d "
        + sele_dist1
        + " --pdf2d "
        + sele_dist2
        + " --bootstrapping-synonymous-dir "
        + bootstrap_syn_dir
        + " --bootstrapping-nonsynonymous-dir "
        + bootstrap_non_dir
        + " --output "
        + output,
        shell=True,
    )
